package com.example.bettertrialbook.models;

import android.os.Parcel;
import android.os.Parcelable;

import com.example.bettertrialbook.Extras;

import java.util.Date;

/**
 * The CountTrial class extends the Trial class and represents trials of an observation.
 * Each trial counts as one successful observation of a specified condition, and thus the total
 * count is the number of CountTrials submitted.
 * It implements Comparable so that CountTrials can easily be compared against each other
 */
public class CountTrial extends Trial implements Comparable<CountTrial> {

    /**
     * creates a count trial
     * @param trialId
     *  the id of the trial
     * @param experimenterId
     *  the id of the experimenter that created the trial
     * @param geolocation
     *  the geolocation of the trial
     * @param timestamp
     *  the Date it was created
     */
    public CountTrial(String trialId, String experimenterId, Geolocation geolocation, Date timestamp) {
        setTimestamp(timestamp);
        setTrialID(trialId);
        setExperimenterID(experimenterId);
        setGeolocation(geolocation);
    }

    /**
     * gets the trial/experiment type of the trial
     * @return
     *  'Count-Based'
     */
    @Override
    public String getTrialType() {
        return Extras.COUNT_TYPE;
    }

    // Comparable implementation

    /**
     * This overrides the compareTo method from Comparable,
     * making it so that we can compare countTrial objects
     * @param countTrial
     *  The countTrial being compared to
     * @return
     *  Returns 0 if the countTrials are equal, non-zero otherwise
     */
    @Override
    public int compareTo(CountTrial countTrial) {
        return this.getTrialType().compareTo(countTrial.getTrialType()) +
                this.getTrialID().compareTo(countTrial.getTrialID()) + this.getGeolocation().compareTo(countTrial.getGeolocation());
    }

    // Parcelable implementation, for the most part auto generated by Android Studio

    /**
     * The Constructor used for passing a Parcel
     * @param in
     *  the Parcel being used
     */
    protected CountTrial(Parcel in) {
        super(in);
    }

    /**
     * The Creator method for the Parcelable implementation of CountTrial
     */
    public static final Parcelable.Creator<CountTrial> CREATOR = new Parcelable.Creator<CountTrial>() {
        public CountTrial createFromParcel(Parcel in) {
            return new CountTrial(in);
        }

        public CountTrial[] newArray(int size) {
            return new CountTrial[size];
        }
    };

    /**
     * the describeContents() method implemented for Parcelable implementation
     * @return
     *  0
     */
    public int describeContents() {
        return 0;
    }

    /**
     * Creates a parcel with the relevant information, though CountTrial does not contain any
     * CountTrial specific variables
     * @param dest
     *  the Parcel being created
     * @param flags
     *  any relevant flags for Parcelable implementation
     */
    public void writeToParcel(Parcel dest, int flags) {
        super.writeToParcel(dest, flags);
    }
}
