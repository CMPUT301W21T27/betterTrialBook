package com.example.bettertrialbook.models;

import android.os.Parcel;
import android.os.Parcelable;

import java.util.Date;

/**
 * The abstract Trial class is a parent class for the four kinds of trials.
 * This holds the id of the trial and the experimenter, information common to all types of trials
 * such as a geolocation, a timestamp, and whether it is blacklisted. It also contains
 * an abstract method getTrialType() to be implemented by each child class.
 *
 * Trial implements Parcelable so that it can be passed through intents between activities.
 */
public abstract class Trial implements Parcelable {
    private String trialID;
    private String experimenterID;
    private Boolean blacklist = false;
    private Geolocation geolocation;
    private Date timestamp;

    /**
     * gets the timestamp of when the trial was created
     * @return
     *  the Date when the trial was created
     */
    public Date getTimestamp() {
        return timestamp;
    }

    /**
     * sets the timestamp of when the trial was created
     * @param timestamp
     *  the Date of when the trial was created
     */
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * gets the geolocation of the Trial
     * @return
     *  the geolocation of the trial
     */
    public Geolocation getGeolocation() {
        return geolocation;
    }

    /**
     * sets the geolocation of the trial
     * @param geolocation
     *  the geolocation to be set
     */
    public void setGeolocation(Geolocation geolocation) {
        this.geolocation = geolocation;
    }

    /**
     * gets the id of the trial
     * @return
     *  the id of the trial
     */
    public String getTrialID() {
        return trialID;
    }

    /**
     * sets the id of the trial
     * @param trialID
     *  the string id for the trial
     */
    public void setTrialID(String trialID) {
        this.trialID = trialID;
    }

    /**
     * gets the experimenter who made the trial's id
     * @return
     *  the id of the experimenter who created the trial
     */
    public String getExperimenterID() {
        return experimenterID;
    }

    /**
     * sets the trial's experimenter id
     * @param experimenterID
     *  the string id for the experimenter
     */
    public void setExperimenterID(String experimenterID) {
        this.experimenterID = experimenterID;
    }

    /**
     * gets whether the trial is blacklisted or not
     * @return
     *  whether the trial is blacklisted or not
     */
    public Boolean getBlacklist() {
        return blacklist;
    }

    /**
     * sets whether the trial is blacklisted or not
     * @param blacklist
     *  whether the trial is blacklisted or not
     */
    public void setBlacklist(Boolean blacklist) {
        this.blacklist = blacklist;
    }

    /**
     * gets the type of trial/experiment for the trial
     * note this is implemented in other classes extending this one
     * @return
     *  the type of trial/experiment for the trial
     */
    public abstract String getTrialType();

    // Parcelable implementation, for the most part auto generated by Android Studio

    /**
     * An empty constructor used by child classes when implementing Parcelable
     */
    protected Trial() {}

    /**
     * A constructor used by child classes when implementing Parcelable
     * @param in
     *  the Parcel containing the relevant information
     */
    protected Trial(Parcel in) {
        trialID = in.readString();
        experimenterID = in.readString();
        geolocation = in.readParcelable(Geolocation.class.getClassLoader());
        timestamp = (Date) in.readSerializable();
    }

    /**
     * Overrides the writeToParcel method, creating a Parcel with the
     * relevant Trial information
     * @param dest
     *  the Parcel being created
     * @param flags
     *  any relevant flags for Parcelable implementation
     */
    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(trialID);
        dest.writeString(experimenterID);
        dest.writeParcelable(geolocation, flags);
        dest.writeSerializable(timestamp);
    }

}
